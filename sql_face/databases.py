# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/04_databases.ipynb.

# %% auto 0
__all__ = ['DATABASES', 'FaceDataBase', 'LFW', 'get_image_db']

# %% ../nbs/04_databases.ipynb 3
from abc import ABC, abstractmethod
from typing import List

# %% ../nbs/04_databases.ipynb 4
class FaceDataBase(ABC):
    def __init__(self, 
    input_dir:str,
    source:str
    ):
        self.input_dir= input_dir
        self.source = source

# %% ../nbs/04_databases.ipynb 6
class LFW(FaceDataBase):
    def __init__(self, input_dir):
        super().__init__(input_dir, source = 'LFW')
    

# %% ../nbs/04_databases.ipynb 7
DATABASES = {'lfw': LFW 
                    # 'xqlfw': XQLFW, 
                    #  'scface': SCFace, 
                    #  'forenface': ForenFace, 
                    #  'utkface': UTKFace,
                    #  'enfsi': Enfsi, 
                    #  'enfsi2015': Enfsi2015
                     }



# %% ../nbs/04_databases.ipynb 8
def get_image_db(input_dir:str,
                database_names:List[str]) -> List[FaceDataBase]:
        """
        From str to FaceDataBase class.

        :param scorer_names: List[str]
        :return: List[FaceDataBase]
        """
        # todo: update description.
        # todo: Raise error if str input is not contained in the DB dictionary.
        # DATABASES = {'lfw': LFW, 
                    # 'xqlfw': XQLFW, 
                    #  'scface': SCFace, 
                    #  'forenface': ForenFace, 
                    #  'utkface': UTKFace,
                    #  'enfsi': Enfsi, 
                    #  'enfsi2015': Enfsi2015}
        return [DATABASES[db](input_dir = input_dir) for db in database_names]
